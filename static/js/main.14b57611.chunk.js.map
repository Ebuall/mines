{"version":3,"sources":["features/game/SelectList.module.css","features/game/Scoreboard.module.css","features/game/Setting.ts","features/game/gameSlice.ts","features/game/boardSlice.ts","features/game/Scoreboard.tsx","features/game/Board.tsx","features/game/CustomSetting.tsx","features/game/SelectList.tsx","features/game/Game.tsx","App.tsx","app/store.ts","serviceWorker.ts","index.tsx","features/game/Board.module.css","features/game/Game.module.css"],"names":["module","exports","Dimension","t","n","MineCount","Setting","height","width","mines","InputNumber","s","Number","isNaN","SettingInput","ValidatedSetting","i","is","validate","c","pipe","chain","toString","BoxState","GameState","settingList","initialState","mode","settings","encode","setting","gameSlice","createSlice","name","reducers","start","state","input","isRight","decode","exit","console","log","selectDifficulty","action","buildin","payload","updateSettings","Point","x","y","Box","value","Closed","range","Array","from","_","isMine","box","forEachNeighbor","map","fn","length","boardSlice","undefined","gameState","Init","init","emptyMap","click","Over","flattenedMap","arr","target","min","max","Math","ceil","floor","random","shuffle","splice","Open","row","rowStart","slice","populatedMap","Progress","clicked","openAroundZero","pt","point","reduce","count","Win","flag","Flagged","unflag","extraReducers","actions","type","Scoreboard","useSelector","board","mineCount","game","flagged","className","styles","wrappper","props","draggable","square","open","children","Mine","Flag","dispatch","useDispatch","onContextMenu","ev","preventDefault","key","onClick","Board","useEffect","wrapper","style","col","CustomSetting","disabled","onChange","pattern","SelectList","entries","entry","title","selected","Game","menu","flex","padded","App","store","configureStore","reducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.14b57611.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"SelectList_wrapper__1r9zo\",\"selected\":\"SelectList_selected__1v-N9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrappper\":\"Scoreboard_wrappper__SVYlH\"};","import { chain, isRight } from \"fp-ts/lib/Either\";\r\nimport { pipe } from \"fp-ts/lib/pipeable\";\r\nimport * as t from \"io-ts\";\r\n\r\ninterface DimensionBrand {\r\n  readonly Dimension: unique symbol;\r\n}\r\nconst Dimension = t.brand(\r\n  t.number,\r\n  (n): n is t.Branded<number, DimensionBrand> => n > 0 && n <= 50,\r\n  \"Dimension\",\r\n);\r\n\r\ninterface MineCountBrand {\r\n  readonly MineCount: unique symbol;\r\n}\r\nconst MineCount = t.brand(\r\n  t.number,\r\n  (n): n is t.Branded<number, MineCountBrand> => n > 0 && n < 2500,\r\n  \"MineCount\",\r\n);\r\n\r\ntype Setting = t.TypeOf<typeof Setting>;\r\nconst Setting = t.interface(\r\n  {\r\n    height: Dimension,\r\n    width: Dimension,\r\n    mines: MineCount,\r\n  },\r\n  \"Setting\",\r\n);\r\n\r\ninterface InputNumberBrand {\r\n  readonly InputNumber: unique symbol;\r\n}\r\nexport const InputNumber = t.brand(\r\n  t.string,\r\n  (s): s is t.Branded<string, InputNumberBrand> => {\r\n    const n = Number(s);\r\n    return !isNaN(n) && n >= 0;\r\n  },\r\n  \"InputNumber\",\r\n);\r\n\r\nexport type SettingInput = t.TypeOf<typeof SettingInput>;\r\nexport const SettingInput = t.interface({\r\n  height: InputNumber,\r\n  width: InputNumber,\r\n  mines: InputNumber,\r\n});\r\n\r\ninterface ValidatedSettingBrand {\r\n  readonly ValidatedSetting: unique symbol;\r\n}\r\nexport type ValidatedSetting = t.Branded<Setting, ValidatedSettingBrand>;\r\nexport const ValidatedSetting = new t.Type<\r\n  ValidatedSetting,\r\n  SettingInput,\r\n  unknown\r\n>(\r\n  \"ValidatedSetting\",\r\n  (i): i is ValidatedSetting => Setting.is(i) && validate(i),\r\n  (i, c) => {\r\n    return pipe(\r\n      SettingInput.validate(i, c),\r\n      chain((i) => {\r\n        const height = Number(i.height);\r\n        const width = Number(i.width);\r\n        const mines = Number(i.mines);\r\n        return Setting.validate({ height, width, mines }, c);\r\n      }),\r\n      chain((s) => {\r\n        if (validate(s)) {\r\n          return t.success(s as ValidatedSetting);\r\n        } else {\r\n          return t.failure(i, c);\r\n        }\r\n      }),\r\n    );\r\n  },\r\n  ({ height, width, mines }) => {\r\n    return {\r\n      height: height.toString(),\r\n      width: width.toString(),\r\n      mines: mines.toString(),\r\n    } as SettingInput;\r\n  },\r\n);\r\n\r\nfunction validate(s: Setting) {\r\n  return s.width * s.height > s.mines;\r\n}\r\n\r\nexport function validateSettings(input: unknown) {\r\n  return isRight(ValidatedSetting.decode(input));\r\n}\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { validateSettings, SettingInput, ValidatedSetting } from \"./Setting\";\r\n\r\nconst settingList = [\r\n  {\r\n    height: 8,\r\n    width: 8,\r\n    mines: 10,\r\n  },\r\n  {\r\n    height: 16,\r\n    width: 16,\r\n    mines: 40,\r\n  },\r\n  {\r\n    height: 16,\r\n    width: 30,\r\n    mines: 99,\r\n  },\r\n] as ValidatedSetting[];\r\n\r\nconst initialState = {\r\n  mode: \"menu\" as \"menu\" | \"game\",\r\n  settings: ValidatedSetting.encode(settingList[0]),\r\n  setting: 0,\r\n};\r\n\r\ntype ActionWith<T> = {\r\n  payload: T;\r\n};\r\nexport const gameSlice = createSlice({\r\n  name: \"game\",\r\n  initialState,\r\n  reducers: {\r\n    start: (state) => {\r\n      if (validateSettings(state.settings)) {\r\n        state.mode = \"game\";\r\n      }\r\n    },\r\n    exit: (state) => {\r\n      console.log(\"exit triggers here\");\r\n      state.mode = \"menu\";\r\n    },\r\n    selectDifficulty: (state, action: ActionWith<number>) => {\r\n      const buildin = settingList[action.payload];\r\n      if (buildin) {\r\n        state.settings = ValidatedSetting.encode(buildin);\r\n      }\r\n      state.setting = action.payload;\r\n    },\r\n    updateSettings: (state, action: ActionWith<SettingInput>) => {\r\n      state.settings = action.payload;\r\n      state.setting = 3;\r\n    },\r\n  },\r\n});\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { map } from \"fp-ts/lib/Either\";\r\nimport { pipe } from \"fp-ts/lib/pipeable\";\r\nimport { gameSlice } from \"./gameSlice\";\r\nimport { SettingInput, ValidatedSetting } from \"./Setting\";\r\n\r\nexport type Point = ReturnType<typeof Point>;\r\nexport function Point(x: number, y: number) {\r\n  return { x, y };\r\n}\r\nexport enum BoxState {\r\n  Closed,\r\n  Open,\r\n  Flagged,\r\n}\r\nexport type Box = ReturnType<typeof Box>;\r\nexport function Box(value = 0, state = BoxState.Closed) {\r\n  return { value, state };\r\n}\r\nBox.isMine = function (box: Box) {\r\n  return box.value < 0;\r\n};\r\nBox.forEachNeighbor = function (\r\n  map: Box[][],\r\n  { x, y }: Point,\r\n  fn: (box: Box, point: Point) => void,\r\n) {\r\n  const width = map[0].length;\r\n  const height = map.length;\r\n  if (y < height - 1) {\r\n    fn(map[y + 1][x], { x: x, y: y + 1 });\r\n    if (x < width - 1) {\r\n      fn(map[y + 1][x + 1], { x: x + 1, y: y + 1 });\r\n    }\r\n  }\r\n  if (x < width - 1) {\r\n    fn(map[y][x + 1], { x: x + 1, y: y });\r\n    if (y > 0) {\r\n      fn(map[y - 1][x + 1], { x: x + 1, y: y - 1 });\r\n    }\r\n  }\r\n  if (y > 0) {\r\n    fn(map[y - 1][x], { x: x, y: y - 1 });\r\n    if (x > 0) {\r\n      fn(map[y - 1][x - 1], { x: x - 1, y: y - 1 });\r\n    }\r\n  }\r\n  if (x > 0) {\r\n    fn(map[y][x - 1], { x: x - 1, y: y });\r\n    if (y < height - 1) {\r\n      fn(map[y + 1][x - 1], { x: x - 1, y: y + 1 });\r\n    }\r\n  }\r\n};\r\n\r\nfunction range(n: number) {\r\n  return Array.from(new Array(n), (_, i) => i);\r\n}\r\n\r\n/**\r\n * From MDN\r\n *\r\n * The maximum is exclusive and the minimum is inclusive\r\n */\r\nfunction getRandomInt(min: number, max: number) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min)) + min;\r\n}\r\n\r\nfunction shuffle(arr: any[]): void {\r\n  for (let i = arr.length - 1; i > 0; i--) {\r\n    const target = getRandomInt(0, i + 1);\r\n    [arr[i], arr[target]] = [arr[target], arr[i]];\r\n  }\r\n}\r\n\r\nfunction emptyMap({ height, width }: ValidatedSetting) {\r\n  return range(height).map((_) => range(width).map((_) => Box()));\r\n}\r\n\r\nfunction populatedMap(\r\n  { height, width, mines }: ValidatedSetting,\r\n  click: Point,\r\n) {\r\n  const flattenedMap = Array.from(new Array(height * width - 1), (_) => Box());\r\n  for (let i = 0; i < mines; i++) {\r\n    flattenedMap[i].value = -10;\r\n  }\r\n  shuffle(flattenedMap);\r\n  flattenedMap.splice(click.y * width + click.x, 0, Box(0, BoxState.Open));\r\n\r\n  const map: Box[][] = new Array(height);\r\n  for (let row = 0; row < map.length; row++) {\r\n    const rowStart = row * width;\r\n    map[row] = flattenedMap.slice(rowStart, rowStart + width);\r\n  }\r\n\r\n  for (let x = 0; x < width; x++) {\r\n    for (let y = 0; y < height; y++) {\r\n      if (Box.isMine(map[y][x])) {\r\n        Box.forEachNeighbor(map, Point(x, y), (box) => box.value++);\r\n      }\r\n    }\r\n  }\r\n\r\n  return map;\r\n}\r\n\r\nexport enum GameState {\r\n  Init,\r\n  Progress,\r\n  Over,\r\n  Win,\r\n}\r\n\r\ntype ActionWith<T> = {\r\n  payload: T;\r\n};\r\nexport const boardSlice = createSlice({\r\n  name: \"board\",\r\n  initialState: {\r\n    map: (undefined as unknown) as Box[][],\r\n    gameState: GameState.Init,\r\n  },\r\n  reducers: {\r\n    init: (state, action: ActionWith<SettingInput>) => {\r\n      pipe(\r\n        ValidatedSetting.decode(action.payload),\r\n        map((s) => {\r\n          state.map = emptyMap(s);\r\n        }),\r\n      );\r\n    },\r\n    click: (\r\n      state,\r\n      {\r\n        payload: { settings, click },\r\n      }: ActionWith<{ settings: SettingInput; click: Point }>,\r\n    ) => {\r\n      console.log(\"clicked\", click);\r\n      if (state.gameState === GameState.Over) {\r\n        return;\r\n      }\r\n      if (state.gameState === GameState.Init) {\r\n        pipe(\r\n          ValidatedSetting.decode(settings),\r\n          map((s) => {\r\n            state.map = populatedMap(s, click);\r\n            state.gameState = GameState.Progress;\r\n          }),\r\n        );\r\n      } else {\r\n        const clicked = state.map[click.y][click.x];\r\n        clicked.state = BoxState.Open;\r\n        if (Box.isMine(clicked)) {\r\n          state.gameState = GameState.Over;\r\n        }\r\n      }\r\n      function openAroundZero(map: Box[][], pt: Point) {\r\n        if (map[pt.y][pt.x].value === 0) {\r\n          Box.forEachNeighbor(map, pt, (box, point) => {\r\n            if (box.state === BoxState.Open) return;\r\n            if (box.value >= 0) {\r\n              box.state = BoxState.Open;\r\n              console.log(\"opening around\", point);\r\n              openAroundZero(map, point);\r\n            }\r\n          });\r\n        }\r\n      }\r\n      openAroundZero(state.map, click);\r\n      const boxesLeftToOpen = state.map.reduce(\r\n        (count, row) =>\r\n          count +\r\n          row.reduce(\r\n            (count, box) =>\r\n              count +\r\n              (!Box.isMine(box) && box.state === BoxState.Closed ? 1 : 0),\r\n            0,\r\n          ),\r\n        0,\r\n      );\r\n      if (boxesLeftToOpen === 0) {\r\n        state.gameState = GameState.Win;\r\n      }\r\n    },\r\n    flag: (state, { payload: { x, y } }: ActionWith<Point>) => {\r\n      if (state.gameState === GameState.Progress) {\r\n        state.map[y][x].state = BoxState.Flagged;\r\n      }\r\n    },\r\n    unflag: (state, { payload: { x, y } }: ActionWith<Point>) => {\r\n      if (state.gameState === GameState.Progress) {\r\n        state.map[y][x].state = BoxState.Closed;\r\n      }\r\n    },\r\n  },\r\n  extraReducers: {\r\n    [gameSlice.actions.exit().type]: (state) => {\r\n      console.log(\"exit triggers here too\");\r\n      state.map = undefined as any;\r\n      state.gameState = GameState.Init;\r\n    },\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../app/store\";\r\nimport { BoxState, GameState } from \"./boardSlice\";\r\nimport styles from \"./Scoreboard.module.css\";\r\n\r\nexport const Scoreboard: React.FC = () => {\r\n  const s = useSelector((state: RootState) => {\r\n    const {\r\n      board,\r\n      game: {\r\n        settings: { mines: mineCount },\r\n      },\r\n    } = state;\r\n    return { board, mineCount };\r\n  });\r\n  if (s.board.gameState === GameState.Over) {\r\n    return <div>Game Over 🙁</div>;\r\n  }\r\n  if (s.board.gameState === GameState.Win) {\r\n    return <div>You Won 🎉</div>;\r\n  }\r\n  const flagged = s.board.map.reduce(\r\n    (count, row) =>\r\n      count +\r\n      row.reduce(\r\n        (count, box) => count + (box.state === BoxState.Flagged ? 1 : 0),\r\n        0,\r\n      ),\r\n    0,\r\n  );\r\n  return (\r\n    <div className={styles.wrappper}>🚩 {Number(s.mineCount) - flagged}</div>\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../app/store\";\r\nimport styles from \"./Board.module.css\";\r\nimport { boardSlice, Box, BoxState, GameState, Point } from \"./boardSlice\";\r\nimport { gameSlice } from \"./gameSlice\";\r\nimport { Scoreboard } from \"./Scoreboard\";\r\nimport { SettingInput } from \"./Setting\";\r\n\r\ntype Props = {\r\n  settings: SettingInput;\r\n};\r\n\r\nfunction range(n: number) {\r\n  return Array.from(new Array(n), (_, i) => i);\r\n}\r\n\r\nconst Open: React.FC<{ value?: number }> = (props) => (\r\n  <div\r\n    draggable={false}\r\n    className={\r\n      styles.square + \" \" + styles[\"m\" + props.value] + \" \" + styles.open\r\n    }\r\n  >\r\n    {props.children}\r\n  </div>\r\n);\r\n\r\nconst Mine: React.FC = () => <Open>💣</Open>;\r\n\r\nconst Flag: React.FC<Point> = (props) => {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div\r\n      className={styles.square}\r\n      onContextMenu={(ev) => {\r\n        ev.preventDefault();\r\n        dispatch(boardSlice.actions.unflag(props));\r\n      }}\r\n    >\r\n      🚩\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Closed: React.FC<Point & { settings: SettingInput }> = ({\r\n  settings,\r\n  children: _,\r\n  ...click\r\n}): JSX.Element => {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div\r\n      key={click.x}\r\n      className={styles.square}\r\n      onClick={() =>\r\n        dispatch(\r\n          boardSlice.actions.click({\r\n            settings,\r\n            click,\r\n          }),\r\n        )\r\n      }\r\n      onContextMenu={(ev) => {\r\n        ev.preventDefault();\r\n        dispatch(boardSlice.actions.flag(click));\r\n      }}\r\n    ></div>\r\n  );\r\n};\r\n\r\nexport const Board: React.FC<Props> = ({ settings }) => {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(boardSlice.actions.init(settings));\r\n  }, [settings, dispatch]);\r\n  const state = useSelector((state: RootState) => state.board);\r\n  if (!state.map) return <div></div>;\r\n\r\n  return (\r\n    <div className={styles.wrapper} style={{}}>\r\n      <Scoreboard></Scoreboard>\r\n      {range(+settings.height).map((row) => (\r\n        <div key={row} className={styles.row}>\r\n          {range(+settings.width).map((col) => {\r\n            const box = state.map[row][col];\r\n            if (Box.isMine(box)) {\r\n              if (\r\n                box.state === BoxState.Open ||\r\n                state.gameState === GameState.Over ||\r\n                state.gameState === GameState.Win\r\n              ) {\r\n                return <Mine key={col}></Mine>;\r\n              }\r\n            }\r\n            if (box.state === BoxState.Closed) {\r\n              return (\r\n                <Closed key={col} settings={settings} x={col} y={row}></Closed>\r\n              );\r\n            }\r\n            if (box.state === BoxState.Flagged) {\r\n              return <Flag key={col} x={col} y={row}></Flag>;\r\n            }\r\n            return (\r\n              <Open key={col} value={box.value}>\r\n                {box.value || \"\"}\r\n              </Open>\r\n            );\r\n          })}\r\n        </div>\r\n      ))}\r\n      <button onClick={() => dispatch(gameSlice.actions.exit())}>Exit</button>\r\n    </div>\r\n  );\r\n};\r\n","import { map } from \"fp-ts/lib/Either\";\r\nimport { pipe } from \"fp-ts/lib/pipeable\";\r\nimport React from \"react\";\r\nimport styles from \"./CustomSetting.module.css\";\r\nimport { InputNumber, SettingInput } from \"./Setting\";\r\n\r\ntype Props = {\r\n  settings: SettingInput;\r\n  disabled?: boolean;\r\n  onChange: (value: SettingInput) => void;\r\n};\r\n\r\nexport const CustomSetting: React.FC<Props> = ({\r\n  settings,\r\n  disabled = false,\r\n  onChange,\r\n}) => {\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <label>\r\n        <div>Height</div>\r\n        <input\r\n          type=\"text\"\r\n          value={settings.height}\r\n          disabled={disabled}\r\n          pattern=\"[0-9]{1,2}\"\r\n          onChange={(ev) =>\r\n            pipe(\r\n              InputNumber.decode(ev.target.value),\r\n              map((height) =>\r\n                onChange({\r\n                  ...settings,\r\n                  height,\r\n                }),\r\n              ),\r\n            )\r\n          }\r\n        />\r\n      </label>\r\n      <label>\r\n        <div>Width</div>\r\n        <input\r\n          type=\"text\"\r\n          value={settings.width}\r\n          disabled={disabled}\r\n          pattern=\"[0-9]{1,2}\"\r\n          onChange={(ev) =>\r\n            pipe(\r\n              InputNumber.decode(ev.target.value),\r\n              map((width) =>\r\n                onChange({\r\n                  ...settings,\r\n                  width,\r\n                }),\r\n              ),\r\n            )\r\n          }\r\n        />\r\n      </label>\r\n      <label>\r\n        <div>Mine Count</div>\r\n        <input\r\n          type=\"text\"\r\n          value={settings.mines}\r\n          disabled={disabled}\r\n          pattern=\"[0-9]{1,3}\"\r\n          onChange={(ev) =>\r\n            pipe(\r\n              InputNumber.decode(ev.target.value),\r\n              map((mines) =>\r\n                onChange({\r\n                  ...settings,\r\n                  mines,\r\n                }),\r\n              ),\r\n            )\r\n          }\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport styles from \"./SelectList.module.css\";\r\n\r\ntype Props<Value = any> = {\r\n  entries: { title: string; value: Value }[];\r\n  selected: Value;\r\n  onChange: (value: Value) => void;\r\n};\r\n\r\nexport const SelectList = function <Value>(props: Props<Value>) {\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      {props.entries.map((entry) => (\r\n        <div\r\n          key={entry.title}\r\n          className={entry.value === props.selected ? styles.selected : void 0}\r\n          onClick={() => props.onChange(entry.value)}\r\n        >\r\n          {entry.title}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../app/store\";\r\nimport { Board } from \"./Board\";\r\nimport { CustomSetting } from \"./CustomSetting\";\r\nimport styles from \"./Game.module.css\";\r\nimport { gameSlice } from \"./gameSlice\";\r\nimport { SelectList } from \"./SelectList\";\r\n\r\nconst entries = [\r\n  { title: \"Easy\", value: 0 },\r\n  { title: \"Medium\", value: 1 },\r\n  { title: \"Hard\", value: 2 },\r\n  { title: \"Custom\", value: 3 },\r\n];\r\n\r\nexport const Game: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const state = useSelector((state: RootState) => state.game);\r\n  return (\r\n    <div className={styles.wrapper} onContextMenu={(ev) => ev.preventDefault()}>\r\n      {state.mode === \"game\" && <Board settings={state.settings}></Board>}\r\n      {state.mode === \"menu\" && (\r\n        <>\r\n          <div className={styles.menu}>\r\n            <div className={styles.flex}>\r\n              <div className={styles.padded}>\r\n                <SelectList\r\n                  entries={entries}\r\n                  selected={state.setting}\r\n                  onChange={(value) =>\r\n                    dispatch(gameSlice.actions.selectDifficulty(value))\r\n                  }\r\n                ></SelectList>\r\n              </div>\r\n              <div className={styles.padded}>\r\n                <CustomSetting\r\n                  settings={state.settings}\r\n                  onChange={(c) =>\r\n                    dispatch(gameSlice.actions.updateSettings(c))\r\n                  }\r\n                ></CustomSetting>\r\n              </div>\r\n            </div>\r\n            <button\r\n              className={styles.start}\r\n              onClick={() => dispatch(gameSlice.actions.start())}\r\n            >\r\n              Start\r\n            </button>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport { Game } from \"./features/game/Game\";\r\n\r\nfunction App() {\r\n  return <Game></Game>;\r\n}\r\n\r\nexport default App;\r\n","import { configureStore, ThunkAction, Action } from \"@reduxjs/toolkit\";\r\nimport { gameSlice } from \"../features/game/gameSlice\";\r\nimport { boardSlice } from \"../features/game/boardSlice\";\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    game: gameSlice.reducer,\r\n    board: boardSlice.reducer,\r\n  },\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\n  ReturnType,\r\n  RootState,\r\n  unknown,\r\n  Action<string>\r\n>;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { store } from \"./app/store\";\r\nimport { Provider } from \"react-redux\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\"),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Board_wrapper__1KPR3\",\"row\":\"Board_row__31yPi\",\"square\":\"Board_square__yalsw\",\"open\":\"Board_open__33LFk\",\"m1\":\"Board_m1__33jAX\",\"m2\":\"Board_m2__3ay1u\",\"m3\":\"Board_m3__2QFR1\",\"m4\":\"Board_m4__MPHu4\",\"m5\":\"Board_m5__kjbyA\",\"m6\":\"Board_m6__3UP3J\",\"m7\":\"Board_m7__3kXsK\",\"m8\":\"Board_m8__3Hh2c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Game_wrapper__3oH14\",\"padded\":\"Game_padded__3SoC3\",\"menu\":\"Game_menu__3_saJ\",\"flex\":\"Game_flex__1l6-r\",\"start\":\"Game_start__1APg2\"};"],"sourceRoot":""}